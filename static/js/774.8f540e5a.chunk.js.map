{"version":3,"file":"static/js/774.8f540e5a.chunk.js","mappings":"4OAEaA,EAAcC,EAAAA,GAAAA,KAAH,uKASXC,EAAeD,EAAAA,GAAAA,MAAH,4CAIZE,EAASF,EAAAA,GAAAA,OAAH,iD,mBCfNG,EAAc,SAAC,GAAD,SAAGC,SAAwBC,O,SCMzCC,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAO,CAAEJ,KAAAA,EAAME,OAAAA,GAEbL,GAAUQ,EAAAA,EAAAA,IAAYV,GAAtBE,MACFS,GAAWC,EAAAA,EAAAA,MAqBXC,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,SACHR,EAAUQ,GACV,MACF,QACEC,QAAQC,IAAI,qBAKZC,EAAQ,WACZb,EAAQ,IACRE,EAAU,KAGZ,OACE,UAACZ,EAAD,CAAawB,SA3BE,SAAAN,GACfA,EAAEO,iBAdsB,SAAAC,GAKxB,GAJ2BpB,EAAMqB,MAC/B,SAAAC,GAAO,OAAIA,EAAQnB,OAASiB,EAAQjB,QAIpCoB,MAAM,8BACD,CACL,IAAMC,GAASC,EAAAA,EAAAA,IAAYL,GAC3BX,EAASe,IAMXE,CAAkBnB,GAClBU,KAwBA,WACE,qCAEE,SAACrB,EAAD,CACE+B,KAAK,OACLC,GAAIzB,EACJA,KAAK,OACLW,MAAOX,EACP0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRpB,SAAUA,QAGd,uCAEE,SAACf,EAAD,CACE+B,KAAK,MACLxB,KAAK,SACLW,MAAOT,EACPwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRpB,SAAUA,QAGd,SAACd,EAAD,CAAQ8B,KAAK,SAAb,6BC9EOK,EAAoBrC,EAAAA,GAAAA,GAAH,wIAQjBsC,EAAYtC,EAAAA,GAAAA,GAAH,iRCVTuC,EAAY,SAAC,GAAD,SAAGnC,SAAwBoC,QCWvCC,EAAqB,WAChC,IAAQpC,GAAUQ,EAAAA,EAAAA,IAAYV,GAAtBE,MACFmC,GAAS3B,EAAAA,EAAAA,IAAY0B,GACrBzB,GAAWC,EAAAA,EAAAA,OAEjB2B,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,SACR,CAAC7B,IAEJ,IAKM8B,EAAsBvC,EAAMmC,QAAO,SAAAb,GAAO,uBAC9CA,EAAQnB,KAAKqC,qBADiC,aAC9C,EAA4BC,SAASN,EAAOK,kBAG9C,OACE,SAACR,EAAD,UACGO,EAAoBG,KAAI,gBAAGvC,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQuB,EAAjB,EAAiBA,GAAjB,OACvB,UAACK,EAAD,YACE,4BAAO9B,EAAP,OADF,KACuB,0BAAOE,KAC5B,mBACEsC,QAAS,YAfK,SAAAf,GACtB,IAAMJ,GAASoB,EAAAA,EAAAA,IAAehB,GAC9BnB,EAASe,GAcCqB,CAAgBjB,IAFpB,sBAFcA,SC9BXkB,EAAcnD,EAAAA,GAAAA,MAAH,+C,UCGXoD,EAAS,WACpB,IAAMZ,GAAS3B,EAAAA,EAAAA,IAAY0B,GACrBzB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iDAEE,mBACA,SAACoC,EAAD,CACEnB,KAAK,OACLxB,KAAK,SACLW,MAAOqB,EACPxB,SAbiB,SAAAqC,GACrB,IAAMxB,GAASyB,EAAAA,EAAAA,GAAUD,EAAMnC,OAAOC,OACtCL,EAASe,UCRA0B,EAAYvD,EAAAA,GAAAA,IAAH,kPCgBtB,EAZiB,WACf,OACE,UAACuD,EAAD,YACE,uCACA,SAACjD,EAAD,KACA,sCACA,SAAC8C,EAAD,KACA,SAACX,EAAD","sources":["components/FormContacts/FormContacts.styled.jsx","redux/contacts/contacts-selectors.js","components/FormContacts/FormContacts.jsx","components/RenderContactsList/ContactsContainer.styled.jsx","redux/filter/filter-selectors.js","components/RenderContactsList/RenderContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Container.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: space-evenly; */\n  align-items: center;\n  margin: 0 auto;\n  width: 40%;\n`;\n\nexport const ContactInput = styled.input`\n  margin-top: 3px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  \n`;\n","export const getContacts = ({ contacts }) => contacts.items;\n","import React, { useState } from 'react';\nimport { ContactForm, ContactInput, Button } from './FormContacts.styled';\nimport { addContacts } from 'redux/contacts/contacts-operation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nexport const FormContacts = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const data = { name, number };\n\n  const { items } = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = payload => {\n    const findSimilarContact = items.find(\n      contact => contact.name === payload.name\n    );\n\n    if (findSimilarContact) {\n      alert('Contact already exists');\n    } else {\n      const action = addContacts(payload);\n      dispatch(action);\n    }\n  };\n\n  const OnSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler(data);\n    reset();\n  };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('Something wrong');\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactForm onSubmit={OnSubmit}>\n      <label>\n        Name\n        <ContactInput\n          type=\"text\"\n          id={name}\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <label>\n        Number\n        <ContactInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </ContactForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.ul`\n  padding: 30px;\n  margin: 0;\n  margin-top: 30px;\n  outline: 1px solid white;\n  background-color: #4b7f83;\n`;\n\nexport const ContactEl = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 10px 10px 0 10px;\n  margin-top: 2px;\n  border-radius: 5px;\n\n  & > span {\n    width: 50%;\n  }\n  & > span:first-child {\n    text-align: left;\n  }\n`;\n","export const getFilter = ({ contacts }) => contacts.filter;\n","import { ContactsContainer, ContactEl } from './ContactsContainer.styled';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport {\n  fetchContacts,\n  removeContacts,\n} from 'redux/contacts/contacts-operation';\n// import { removeContacts } from 'redux/contacts/contacts-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nexport const RenderContactsList = () => {\n  const { items } = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    const action = removeContacts(id);\n    dispatch(action);\n  };\n\n  const getFilteredContacts = items.filter(contact =>\n    contact.name.toLowerCase()?.includes(filter.toLowerCase())\n  );\n\n  return (\n    <ContactsContainer>\n      {getFilteredContacts.map(({ name, number, id }) => (\n        <ContactEl key={id}>\n          <span>{name}:</span> <span>{number}</span>\n          <button\n            onClick={() => {\n              onDeleteContact(id);\n            }}\n          >\n            Delete\n          </button>\n        </ContactEl>\n      ))}\n    </ContactsContainer>\n  );\n};\n","import styled from 'styled-components'\n\nexport const FilterInput = styled.input`\n    margin-top: 10px;\n`","import { FilterInput } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onFilterChange = event => {\n    const action = setFilter(event.target.value);\n    dispatch(action);\n  };\n\n  return (\n    <label>\n      Search contacts:\n      <br />\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: #8abec3;\n  margin: 10px auto;\n  max-width: 400px;\n  text-align: center;\n  padding: 10px;\n  border-radius: 5px;\n  /* display: flex;\n  flex-direction: column; */\n  /* align-items: center; */\n`;\n","// import React, { useEffect } from 'react';\nimport { FormContacts } from '../../components/FormContacts/FormContacts';\nimport { RenderContactsList } from '../../components/RenderContactsList/RenderContactsList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Container } from './Container.styled';\n\nconst Contacts = () => {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <FormContacts />\n      <h2>Contacts</h2>\n      <Filter />\n      <RenderContactsList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","styled","ContactInput","Button","getContacts","contacts","items","FormContacts","useState","name","setName","number","setNumber","data","useSelector","dispatch","useDispatch","onChange","e","target","value","console","log","reset","onSubmit","preventDefault","payload","find","contact","alert","action","addContacts","formSubmitHandler","type","id","pattern","title","required","ContactsContainer","ContactEl","getFilter","filter","RenderContactsList","useEffect","fetchContacts","getFilteredContacts","toLowerCase","includes","map","onClick","removeContacts","onDeleteContact","FilterInput","Filter","event","setFilter","Container"],"sourceRoot":""}