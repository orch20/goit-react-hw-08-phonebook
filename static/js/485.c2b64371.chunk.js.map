{"version":3,"file":"static/js/485.c2b64371.chunk.js","mappings":"kQAEaA,EAAcC,EAAAA,GAAAA,KAAH,uKASXC,EAAeD,EAAAA,GAAAA,MAAH,4CAIZE,EAASF,EAAAA,GAAAA,OAAH,iD,SCiEnB,EA7EqB,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,kBACtB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAO,CAAEN,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAQtBG,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,QACHP,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MACF,QACEC,QAAQC,IAAI,qBAKZC,EAAQ,WACZZ,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,UAACX,EAAD,CAAaoB,SA/BE,SAAAN,GACfA,EAAEO,iBACFjB,EAAkBQ,GAClBO,KA4BA,WACE,qCAEE,SAACjB,EAAD,CACEoB,KAAK,OACLC,GAAIjB,EACJA,KAAK,OACLU,MAAOV,EACPkB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,SAAUA,QAGd,sCAEE,SAACX,EAAD,CACEoB,KAAK,QACLhB,KAAK,QACLU,MAAOR,EACPkB,UAAQ,EACRb,SAAUA,QAGd,yCAEE,SAACX,EAAD,CACEoB,KAAK,WACLhB,KAAK,WACLU,MAAON,EACPgB,UAAQ,EACRb,SAAUA,QAGd,SAACV,EAAD,CAAQmB,KAAK,SAAb,yB,UChDN,EArBqB,WACnB,IAAMK,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAUhB,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,WACE,qCACA,SAAC,EAAD,CAAc9B,kBAXC,SAAA+B,GACjB,IAAMC,GAASC,EAAAA,EAAAA,IAAOF,GACtBR,EAASS,MAUK,MAAXL,IAAkB,yBAAIC,EAAJ,4B,mBCrBzB,KAAgB,UAAY","sources":["components/RegisterForm/FormContacts.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/pages/Container.module.css?faf4"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: space-evenly; */\n  align-items: center;\n  margin: 0 auto;\n  width: 40%;\n`;\n\nexport const ContactInput = styled.input`\n  margin-top: 3px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  \n`;\n","import React, { useState } from 'react';\nimport { ContactForm, ContactInput, Button } from './FormContacts.styled';\n\nconst RegisterForm = ({ formSubmitHandler }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const data = { name, email, password };\n\n  const OnSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler(data);\n    reset();\n  };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        console.log('Something wrong');\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ContactForm onSubmit={OnSubmit}>\n      <label>\n        Name\n        <ContactInput\n          type=\"text\"\n          id={name}\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <label>\n        Email\n        <ContactInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          required\n          onChange={onChange}\n        />\n      </label>\n      <label>\n        Password\n        <ContactInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          required\n          onChange={onChange}\n        />\n      </label>\n      <Button type=\"submit\">Sign up</Button>\n    </ContactForm>\n  );\n};\n\nexport default RegisterForm;\n","import { signup } from '../../redux/auth/auth-operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAuthError } from 'redux/auth/auth-selectors';\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\nimport css from '../Container.module.css';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  // const isLogin = useSelector(isAuth);\n  const onRegister = payload => {\n    const action = signup(payload);\n    dispatch(action);\n  };\n\n  // if (isLogin) {\n  //   return <Navigate to=\"/contacts\" />;\n  // }\n  return (\n    <div className={css.container}>\n      <h2>Sign up</h2>\n      <RegisterForm formSubmitHandler={onRegister} />\n      {status === 400 && <p>{message} User email exist</p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__x47Yc\"};"],"names":["ContactForm","styled","ContactInput","Button","formSubmitHandler","useState","name","setName","email","setEmail","password","setPassword","data","onChange","e","target","value","console","log","reset","onSubmit","preventDefault","type","id","pattern","title","required","dispatch","useDispatch","useSelector","getAuthError","status","message","className","css","payload","action","signup"],"sourceRoot":""}