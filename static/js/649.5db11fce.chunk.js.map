{"version":3,"file":"static/js/649.5db11fce.chunk.js","mappings":"kMAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,MAGP,KC/BL,GAAgB,KAAO,0BAA0B,WAAa,gCAAgC,KAAO,2B,SCG/FG,EAAe,SAAC,GAEpB,OAFqC,EAAfC,SACI,UAAMC,EAAAA,KAAN,YAAkBA,EAAAA,QAAeA,EAAAA,MAgB7D,EAZmB,WACjB,OACE,eAAIC,UAAWD,EAAAA,KAAf,UACE,eAAoBC,UAAWD,EAAAA,WAA/B,UACE,SAAC,KAAD,CAASC,UAAWH,EAAcI,GAAI,YAAtC,uBADOd,EAAO,OCXtB,GAAgB,KAAO,0BAA0B,OAAS,6BCEpDU,EAAe,SAAC,GAEpB,OAFqC,EAAfC,SACI,UAAMC,EAAAA,KAAN,YAAkBA,EAAAA,QAAeA,EAAAA,MAsB7D,EAlBmB,WACjB,OACE,iCACE,oBACA,iBAAKC,UAAWD,EAAAA,QAAhB,WACE,SAAC,KAAD,CAASE,GAAG,YAAYD,UAAWH,EAAnC,sBAEW,IAHb,IAII,KACF,SAAC,KAAD,CAASI,GAAG,SAASD,UAAWH,EAAhC,uBAIF,uB,8BCpBN,EAA2B,6BCsB3B,EAlBmB,WACjB,IAAQK,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAArBF,KACFG,GAAWC,EAAAA,EAAAA,MAIjB,OACE,+BACE,4BACE,iBAAMN,UAAWD,EAAjB,SAAgCG,KAChC,mBAAQK,QANG,kBAAMF,GAASG,EAAAA,EAAAA,QAMCC,KAAK,SAAhC,2BCdR,EAA0B,wB,UCe1B,EAVe,WACb,IAAMC,GAAUC,EAAAA,EAAAA,KAChB,OACE,iBAAKX,UAAWD,EAAhB,UACGW,IAAW,SAAC,EAAD,IACXA,GAAU,SAAC,EAAD,KAAiB,SAAC,EAAD","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Navbar/NavbarMenu/navbar-menu.module.css?54f4","components/Navbar/NavbarMenu/NavbarMenu.jsx","webpack://react-homework-template/./src/components/Navbar/NavbarAuth/navbar-auth.module.css?6429","components/Navbar/NavbarAuth/NavbarAuth.jsx","webpack://react-homework-template/./src/components/Navbar/NavbarUser/NavbarUser.module.css?8bda","components/Navbar/NavbarUser/NavbarUser.jsx","webpack://react-homework-template/./src/components/Navbar/Navbar.module.css?9379","components/Navbar/Navbar.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"navbar-menu_link__ncKqq\",\"navbarItem\":\"navbar-menu_navbarItem__Px3hZ\",\"menu\":\"navbar-menu_menu__5eqzO\"};","import { NavLink } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './navbar-menu.module.css';\n\nconst getClassName = ({ isActive }) => {\n  const className = isActive ? `${css.link} ${css.active}` : css.link;\n  return className;\n};\n\nconst NavbarMenu = () => {\n  return (\n    <ul className={css.menu}>\n      <li key={nanoid(3)} className={css.navbarItem}>\n        <NavLink className={getClassName} to={'/contacts'}>\n          Contacts\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavbarMenu;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"navbar-auth_link__g2EQ9\",\"active\":\"navbar-auth_active__xMYZC\"};","import { NavLink } from 'react-router-dom';\n\nimport css from './navbar-auth.module.css';\nconst getClassName = ({ isActive }) => {\n  const className = isActive ? `${css.link} ${css.active}` : css.link;\n  return className;\n};\n\nconst NavbarAuth = () => {\n  return (\n    <>\n      <div></div>\n      <div className={css.wrapper}>\n        <NavLink to=\"/register\" className={getClassName}>\n          Register\n        </NavLink>{' '}\n        |{' '}\n        <NavLink to=\"/login\" className={getClassName}>\n          Login\n        </NavLink>\n      </div>\n      <div></div>\n    </>\n  );\n};\n\nexport default NavbarAuth;\n","// extracted by mini-css-extract-plugin\nexport default {\"userName\":\"NavbarUser_userName__Oeyhg\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport { logout } from 'redux/auth/auth-operations';\nimport css from './NavbarUser.module.css';\n\nconst NavbarUser = () => {\n  const { name } = useSelector(getUser);\n  const dispatch = useDispatch();\n\n  const onLogout = () => dispatch(logout());\n\n  return (\n    <>\n      <div>\n        <span className={css.userName}>{name}</span>\n        <button onClick={onLogout} type=\"button\">\n          Log out\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default NavbarUser;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Navbar_wrapper__gG9Qc\"};","import NavbarMenu from './NavbarMenu/NavbarMenu';\nimport NavbarAuth from './NavbarAuth/NavbarAuth';\nimport NavbarUser from './NavbarUser/NavbarUser';\nimport css from './Navbar.module.css';\nimport useAuth from 'shared/hooks/useAuth';\n\nconst Navbar = () => {\n  const isLogin = useAuth();\n  return (\n    <div className={css.wrapper}>\n      {isLogin && <NavbarMenu />}\n      {isLogin ? <NavbarUser /> : <NavbarAuth />}\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","getClassName","isActive","css","className","to","name","useSelector","getUser","dispatch","useDispatch","onClick","logout","type","isLogin","useAuth"],"sourceRoot":""}