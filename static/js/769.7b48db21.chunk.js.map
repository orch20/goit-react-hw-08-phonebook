{"version":3,"file":"static/js/769.7b48db21.chunk.js","mappings":"kQAEaA,EAAcC,EAAAA,GAAAA,KAAH,uKASXC,EAAeD,EAAAA,GAAAA,MAAH,4CAIZE,EAASF,EAAAA,GAAAA,OAAH,6C,SC+CnB,EA3DqB,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,kBACtB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAO,CAAEJ,MAAAA,EAAOE,SAAAA,GAQhBG,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHP,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACEC,QAAQC,IAAI,qBAKZC,EAAQ,WACZX,EAAS,IACTE,EAAY,KAGd,OACE,UAACT,EAAD,CAAamB,SA3BE,SAAAP,GACfA,EAAEQ,iBACFhB,EAAkBM,GAClBQ,KAwBA,WACE,sCAEE,SAAChB,EAAD,CACEmB,KAAK,QACLP,KAAK,QACLC,MAAOT,EACPgB,UAAQ,EACRX,SAAUA,QAGd,yCAEE,SAACT,EAAD,CACEmB,KAAK,WACLP,KAAK,WACLC,MAAOP,EACPc,UAAQ,EACRX,SAAUA,QAGd,SAACR,EAAD,CAAQkB,KAAK,SAAb,yB,UC9BN,EArBkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAUhB,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,WACE,oCACA,SAACC,EAAD,CAAW3B,kBAXC,SAAA4B,GACd,IAAMC,GAASC,EAAAA,EAAAA,IAAMF,GACrBT,EAASU,MAUK,MAAXN,IAAkB,yBAAIC,EAAJ,qB,mBCrBzB,KAAgB,UAAY","sources":["components/LoginForm/FormContacts.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://react-homework-template/./src/pages/Container.module.css?faf4"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: space-evenly; */\n  align-items: center;\n  margin: 0 auto;\n  width: 40%;\n`;\n\nexport const ContactInput = styled.input`\n  margin-top: 3px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n`;\n","import React, { useState } from 'react';\nimport { ContactForm, ContactInput, Button } from './FormContacts.styled';\n\nconst RegisterForm = ({ formSubmitHandler }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const data = { email, password };\n\n  const OnSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler(data);\n    reset();\n  };\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        console.log('Something wrong');\n        break;\n    }\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ContactForm onSubmit={OnSubmit}>\n      <label>\n        Email\n        <ContactInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          required\n          onChange={onChange}\n        />\n      </label>\n      <label>\n        Password\n        <ContactInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          required\n          onChange={onChange}\n        />\n      </label>\n      <Button type=\"submit\">Sign in</Button>\n    </ContactForm>\n  );\n};\n\nexport default RegisterForm;\n","import { login } from '../../redux/auth/auth-operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAuthError } from 'redux/auth/auth-selectors';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport css from '../Container.module.css';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  // const isLogin = useAuth();\n  const onLogin = payload => {\n    const action = login(payload);\n    dispatch(action);\n  };\n\n  // if (isLogin) {\n  //   return <Navigate to=\"/contacts\" />;\n  // }\n  return (\n    <div className={css.container}>\n      <h2>Log in</h2>\n      <LoginForm formSubmitHandler={onLogin} />\n      {status === 400 && <p>{message} Try again</p>}\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__x47Yc\"};"],"names":["ContactForm","styled","ContactInput","Button","formSubmitHandler","useState","email","setEmail","password","setPassword","data","onChange","e","target","name","value","console","log","reset","onSubmit","preventDefault","type","required","dispatch","useDispatch","useSelector","getAuthError","status","message","className","css","LoginForm","payload","action","login"],"sourceRoot":""}